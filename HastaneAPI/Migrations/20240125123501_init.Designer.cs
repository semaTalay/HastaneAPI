// <auto-generated />
using System;
using HastaneAPI.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HastaneAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240125123501_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("HastaneAPI.Entities.Hasta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HastaneId")
                        .HasColumnType("int");

                    b.Property<string>("Klinik")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("MuayeneTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("Soyad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("HastaneId");

                    b.ToTable("Hasta");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Ad = "Semanur",
                            HastaneId = 1,
                            Klinik = "KBB",
                            MuayeneTarihi = new DateTime(2024, 1, 25, 15, 35, 1, 260, DateTimeKind.Local).AddTicks(7384),
                            Soyad = "Talay"
                        },
                        new
                        {
                            Id = 2,
                            Ad = "AAA",
                            HastaneId = 2,
                            Klinik = "Göz",
                            MuayeneTarihi = new DateTime(2024, 1, 25, 15, 35, 1, 260, DateTimeKind.Local).AddTicks(7397),
                            Soyad = "BBB"
                        });
                });

            modelBuilder.Entity("HastaneAPI.Entities.Hastane", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Adres")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HastaneAd")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Hastane");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Adres = "İstanbul",
                            HastaneAd = "Kartal"
                        },
                        new
                        {
                            Id = 2,
                            Adres = "İstanbul",
                            HastaneAd = "Pendik"
                        });
                });

            modelBuilder.Entity("HastaneAPI.Entities.Hasta", b =>
                {
                    b.HasOne("HastaneAPI.Entities.Hastane", "Hastane")
                        .WithMany("Hasta")
                        .HasForeignKey("HastaneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hastane");
                });

            modelBuilder.Entity("HastaneAPI.Entities.Hastane", b =>
                {
                    b.Navigation("Hasta");
                });
#pragma warning restore 612, 618
        }
    }
}
